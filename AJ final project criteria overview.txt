From initial submission:

Coding
	no errors—any kind
	appropriate spacing
	appropriate coding concept for a given problem
	pseudocode or flowchart—we can update these to match our code if our plan changes at all
Documentation
	name, date, program purpose—I think in each file
	includes modification comments if submitted more than once— we are submitting this three 
		times I believe
	well-commented—explain general concept/make easier to understand code
	methods—purpose, preconditions, postconditions
Delivery
	On time for each due date for submitting a version!
Style
	Indentation
	good names for variables, methods, etc. (indicate purpose)
Key elements
	networking
	database
	abstract resource class
	implemented subclasses
	javaFX ui
	multi/parallel threading

From second submission

JavaDoc
	for all private and public classes and methods, defining purpose, input, output and special 		usage notes

Some other criteria from final submission grading stuff:

	change-log in each file
	intuitive ui
	Database with one table
	Database with two tables
	Multiuser functionality
	JUnit testing
	Readme file documenting use and compile or implementation notes
	delivered as a netbeans project